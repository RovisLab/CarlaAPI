# Rovis config: RovisVision/etc/pipelines/carla/carla_replay.conf
General:
{
    carla_ip     = "127.0.0.1"  # Loopback IP
    carla_port   = 2000  # Default Carla Port

    res_x        = 664
    res_y        = 480
    fps          = 30
    quality      = "Medium"

    rovis_ip     = "127.0.0.1"
    town         = "Town03"
    populate_sim = False
    population   = (100, 50)  # Vehicles, Pedestrians
    sync_mode    = True
}

Clients:
{
    MainClient:
    {
        position      = (229.45, 88.78, 1.0)  # Starting position
        orientation   = (0.7, 91.4, 0.0)  # Starting orientation
        random_spawn  = False  # Get a random spawn point or spawn at the position above
        actor_type    = "vehicle.Seat.Leon"  # Vehicle type   (default: vehicle.Seat.Leon)
        trl_control   = False  # Control the traffic light
        control       = "rovis"  # auto / rovis / manual / static  (manual = pygame)

        cam_width   = 800
        cam_height  = 600
        cam_fov     = 90

        Comm = {
			# Name: { type=<sensor_type>, pos=<position to vehicle> }
			CamFront:  { type="camera", pos="default", view=True }
			StateEst: { type="veh_state", pos="", port=2010, send=True }
			Act: { type="actuator", pos="", port=2003 }
        }
    }
    Obstacle:
    {
        position      = (56.6, 193.0, 1.0)  # Starting position
        orientation   = (0.03, -88.69, -1.26)  # Starting orientation
        random_spawn  = False  # Get a random spawn point or spawn at the position above
        actor_type    = "vehicle.Seat.Leon"  # Vehicle type   (default: vehicle.Seat.Leon)
        trl_control   = False  # Control the traffic light
        control       = "static"  # auto / rovis / manual / static  (manual = pygame)

        cam_width   = 800
        cam_height  = 600
        cam_fov     = 90

        Comm = {
			# Name: { type=<sensor_type>, pos=<position to vehicle> }
			# CamFront:  { type="camera", pos="default", view=True }
        }
    }
}

Database:
{
    database_path = ""  # Path where the database will be created
    save_data     = False  # Toggle to enable saving of the database
    sampling_time = 5  # Sampling time in seconds
    samples       = 0  # Number of saved samples (-1 to disable this)

    Datastreams = (
        # { name=<Datastream_name>, cl=<client_name>, sen=<sensor_name>}
    )
}
