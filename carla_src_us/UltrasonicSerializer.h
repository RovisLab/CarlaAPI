#pragma once

#include "carla/Memory.h"
#include "carla/Buffer.h"
#include "carla/sensor/RawData.h"
#include "carla/sensor/data/UltrasonicData.h"

namespace carla {
namespace sensor {

  class SensorData;

namespace s11n {

/// Serializes the data generated by US sensors.
  class UltrasonicSerializer {
  public:
    template <typename Sensor>
    static Buffer Serialize(
        const Sensor &sensor,
        const data::UltrasonicData &measurement,
        Buffer &&output);

    static SharedPtr<SensorData> Deserialize(RawData &&data);
  };

  template <typename Sensor>
  inline Buffer UltrasonicSerializer::Serialize(
      const Sensor &,
      const data::UltrasonicData &measurement,
      Buffer &&output) {
    output.copy_from(measurement._ranges);
    return std::move(output);
  }
} // namespace s11n
} // namespace sensor
} // namespace carla
